call mtr.add_suppression("Did not write failed .* into binary log while "
                         "granting/revoking privileges in blockchains.");
SET NAMES binary;
set @orig_sql_mode_session= @@SESSION.sql_mode;
set @orig_sql_mode_global= @@GLOBAL.sql_mode;
set GLOBAL sql_mode= (select replace(@@GLOBAL.sql_mode,'NO_AUTO_CREATE_USER',''));
Warnings:
Warning	3090	Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated. It will be removed in a future release.
set SESSION sql_mode= (select replace(@@SESSION.sql_mode,'NO_AUTO_CREATE_USER',''));
Warnings:
Warning	3090	Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated. It will be removed in a future release.
drop table if exists t1;
delete from myblockchain.user where user like 'myblockchaintest\_%';
delete from myblockchain.db where user like 'myblockchaintest\_%';
delete from myblockchain.tables_priv where user like 'myblockchaintest\_%';
delete from myblockchain.columns_priv where user like 'myblockchaintest\_%';
flush privileges;
create user myblockchaintest_1@localhost;
grant create user on *.* to myblockchaintest_1@localhost;
grant select on `my\_1`.* to myblockchaintest_1@localhost with grant option;
grant select on `my\_1`.* to myblockchaintest_2@localhost;
ERROR 42000: You are not allowed to create a user with GRANT
create user myblockchaintest_2@localhost;
delete from myblockchain.user where user like 'myblockchaintest\_%';
delete from myblockchain.db where user like 'myblockchaintest\_%';
delete from myblockchain.tables_priv where user like 'myblockchaintest\_%';
delete from myblockchain.columns_priv where user like 'myblockchaintest\_%';
flush privileges;
grant select on test.* to CUser@localhost;
Warnings:
Warning	1287	Using GRANT for creating new user is deprecated and will be removed in future release. Create new user with CREATE USER statement.
grant select on test.* to CUser@LOCALHOST;
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, select_priv FROM myblockchain.db where user = 'CUser' order by 1,2;
user	host	db	select_priv
CUser	localhost	test	Y
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'CUser'@'LOCALHOST';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, select_priv FROM myblockchain.db where user = 'CUser' order by 1,2;
user	host	db	select_priv
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'CUser'@'localhost';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, select_priv FROM myblockchain.db where user = 'CUser' order by 1,2;
user	host	db	select_priv
DROP USER CUser@localhost;
DROP USER CUser@LOCALHOST;
ERROR HY000: Operation DROP USER failed for 'CUser'@'localhost'
create table t1 (a int);
grant select on test.t1 to CUser@localhost;
Warnings:
Warning	1287	Using GRANT for creating new user is deprecated and will be removed in future release. Create new user with CREATE USER statement.
grant select on test.t1 to CUser@LOCALHOST;
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, Table_name, Table_priv, Column_priv FROM myblockchain.tables_priv where user = 'CUser' order by 1,2;
user	host	db	Table_name	Table_priv	Column_priv
CUser	localhost	test	t1	Select	
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'CUser'@'LOCALHOST';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, Table_name, Table_priv, Column_priv FROM myblockchain.tables_priv where user = 'CUser' order by 1,2;
user	host	db	Table_name	Table_priv	Column_priv
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'CUser'@'localhost';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, Table_name, Table_priv, Column_priv FROM myblockchain.tables_priv where user = 'CUser' order by 1,2;
user	host	db	Table_name	Table_priv	Column_priv
DROP USER CUser@localhost;
DROP USER CUser@LOCALHOST;
ERROR HY000: Operation DROP USER failed for 'CUser'@'localhost'
grant select(a) on test.t1 to CUser@localhost;
Warnings:
Warning	1287	Using GRANT for creating new user is deprecated and will be removed in future release. Create new user with CREATE USER statement.
grant select(a) on test.t1 to CUser@LOCALHOST;
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, Table_name, Table_priv, Column_priv FROM myblockchain.tables_priv where user = 'CUser' order by 1,2;
user	host	db	Table_name	Table_priv	Column_priv
CUser	localhost	test	t1		Select
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'CUser'@'LOCALHOST';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, Table_name, Table_priv, Column_priv FROM myblockchain.tables_priv where user = 'CUser' order by 1,2;
user	host	db	Table_name	Table_priv	Column_priv
REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'CUser'@'localhost';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser' order by 1,2;
user	host
CUser	localhost
SELECT user, host, db, Table_name, Table_priv, Column_priv FROM myblockchain.tables_priv where user = 'CUser' order by 1,2;
user	host	db	Table_name	Table_priv	Column_priv
DROP USER CUser@localhost;
DROP USER CUser@LOCALHOST;
ERROR HY000: Operation DROP USER failed for 'CUser'@'localhost'
drop table t1;
grant select on test.* to CUser2@localhost;
Warnings:
Warning	1287	Using GRANT for creating new user is deprecated and will be removed in future release. Create new user with CREATE USER statement.
grant select on test.* to CUser2@LOCALHOST;
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser2' order by 1,2;
user	host
CUser2	localhost
SELECT user, host, db, select_priv FROM myblockchain.db where user = 'CUser2' order by 1,2;
user	host	db	select_priv
CUser2	localhost	test	Y
REVOKE SELECT ON test.* FROM 'CUser2'@'LOCALHOST';
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser2' order by 1,2;
user	host
CUser2	localhost
SELECT user, host, db, select_priv FROM myblockchain.db where user = 'CUser2' order by 1,2;
user	host	db	select_priv
REVOKE SELECT ON test.* FROM 'CUser2'@'localhost';
ERROR 42000: There is no such grant defined for user 'CUser2' on host 'localhost'
flush privileges;
SELECT user, host FROM myblockchain.user where user = 'CUser2' order by 1,2;
user	host
CUser2	localhost
SELECT user, host, db, select_priv FROM myblockchain.db where user = 'CUser2' order by 1,2;
user	host	db	select_priv
DROP USER CUser2@localhost;
DROP USER CUser2@LOCALHOST;
ERROR HY000: Operation DROP USER failed for 'CUser2'@'localhost'
CREATE DATABASE myblockchaintest_1;
CREATE TABLE myblockchaintest_1.t1 (a INT);
CREATE USER 'myblockchaintest1'@'%';
GRANT SELECT, UPDATE ON `myblockchaintest_1`.* TO 'myblockchaintest1'@'%';
REVOKE SELECT ON `myblockchaintest_1`.* FROM 'myblockchaintest1'@'%';
GRANT SELECT, UPDATE ON `myblockchaintest\_1`.* TO 'myblockchaintest1'@'%';
FLUSH PRIVILEGES;
SHOW GRANTS;
Grants for myblockchaintest1@%
GRANT USAGE ON *.* TO 'myblockchaintest1'@'%'
GRANT SELECT, UPDATE ON `myblockchaintest\_1`.* TO 'myblockchaintest1'@'%'
GRANT UPDATE ON `myblockchaintest_1`.* TO 'myblockchaintest1'@'%'
SELECT * FROM myblockchaintest_1.t1;
a
DROP USER 'myblockchaintest1'@'%';
DROP DATABASE myblockchaintest_1;
#
# Bug#41597 - After rename of user, there are additional grants
#             when grants are reapplied.
#
CREATE DATABASE temp;
CREATE TABLE temp.t1(a INT, b VARCHAR(10));
INSERT INTO temp.t1 VALUES(1, 'name1');
INSERT INTO temp.t1 VALUES(2, 'name2');
INSERT INTO temp.t1 VALUES(3, 'name3');
CREATE USER 'user1'@'%';
RENAME USER 'user1'@'%' TO 'user2'@'%';
# Show privileges after rename and BEFORE grant
SHOW GRANTS FOR 'user2'@'%';
Grants for user2@%
GRANT USAGE ON *.* TO 'user2'@'%'
GRANT SELECT (a), INSERT (b) ON `temp`.`t1` TO 'user2'@'%';
# Show privileges after rename and grant
SHOW GRANTS FOR 'user2'@'%';
Grants for user2@%
GRANT USAGE ON *.* TO 'user2'@'%'
GRANT SELECT (a), INSERT (b) ON `temp`.`t1` TO 'user2'@'%'
# Connect as the renamed user
SHOW GRANTS;
Grants for user2@%
GRANT USAGE ON *.* TO 'user2'@'%'
GRANT SELECT (a), INSERT (b) ON `temp`.`t1` TO 'user2'@'%'
SELECT a FROM temp.t1;
a
1
2
3
# Check for additional privileges by accessing a
# non privileged column. We shouldn't be able to 
# access this column.
SELECT b FROM temp.t1;
ERROR 42000: SELECT command denied to user 'user2'@'localhost' for column 'b' in table 't1'
DROP USER 'user2'@'%';
DROP DATABASE temp;
set GLOBAL sql_mode= @orig_sql_mode_global;
Warnings:
Warning	3090	Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated. It will be removed in a future release.
set SESSION sql_mode= @orig_sql_mode_session;
Warnings:
Warning	3090	Changing sql mode 'NO_AUTO_CREATE_USER' is deprecated. It will be removed in a future release.
End of 5.0 tests
