# Basic cases related to myblockchain_install_db
# Execute m_i_db without any options where the file MYBLOCKCHAIN_TMP_DIR/.myblockchain_secret is not there. Start server and try to login with root credentials.
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
select count(*) from myblockchain.user;
count(*)
2
# Execute m_i_db without any options where MYBLOCKCHAIN_TMP_DIR/.myblockchain_secret is there. Start server and try to login with root credentials.
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# with --insecure where the file MYBLOCKCHAIN_TMP_DIR/.myblockchain_secret is not there. Start server and try to login with root credentials
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-user
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
test_user	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
test_user	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --login-path when passed with --login-file
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
test_user2	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior when login-path is not passed, but only --login-file
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
test_user2	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-user
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
test_user	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Now without the option --insecure
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
test_user	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-host
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	127.0.0.1	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	127.0.0.1	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-host when passed along with --admin-path
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-require-ssl when no value is passed with the option
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
ERROR 28000: Access denied for user 'root'@'localhost' (using password: YES)
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
ERROR 28000: Access denied for user 'root'@'localhost' (using password: NO)
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-require-ssl when ON is passed with the option
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
ERROR 28000: Access denied for user 'root'@'localhost' (using password: YES)
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
ERROR 28000: Access denied for user 'root'@'localhost' (using password: NO)
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-require-ssl when OFF is passed with the option
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Check the behavior of the option --admin-require-ssl when invalid value is passed with the option
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Invoke myblockchain_install_db with --random-password-file=<valid path of file> where the file at specified path does not exist 
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Below case is, when --random-password-file already exists
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user FROM myblockchain.user;
ERROR HY000: You must reset your password using ALTER USER statement before executing this statement.
set password='abc';
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Execution of myblockchain_install_db starts............
# Execution of myblockchain_install_db ends..............
SELECT user,host,plugin FROM myblockchain.user WHERE password_expired='n';
user	host	plugin
root	localhost	myblockchain_native_password
SELECT count(*) FROM myblockchain.user;
count(*)
1
CREATE USER 'u1'@'localhost';
GRANT ALL ON *.* TO 'u1'@'localhost';
show blockchains;
Database
information_schema
mtr
myblockchain
performance_schema
sys
test
set password='';
# Reset mtr state 
"execution finished............
