--source include/have_ndb.inc
--source include/have_debug.inc

# Embedded server does not support restarting
--source include/not_embedded.inc

let MYBLOCKCHAIND_DATADIR= `select @@datadir`;
# Setup path to server output log file
let $error_log= $MYBLOCKCHAINTEST_VARDIR/log/my_restart.err;

# Setup MYBLOCKCHAIND_CMD_11 with correct group suffix to first
# myblockchaind in the cluster
let $MYBLOCKCHAIND_CMD_11 = `select REPLACE("$MYBLOCKCHAIND_CMD",
                                     "defaults-group-suffix=.1",
                                     "defaults-group-suffix=.1.1")`;
let $args= --loose-console > $error_log 2>&1;

--echo # Stop the running server
let $restart_file= $MYBLOCKCHAINTEST_VARDIR/tmp/myblockchaind.1.1.expect;
--exec echo "wait" > $restart_file
--shutdown_server
--source include/wait_until_disconnected.inc

--echo # Start server with provoked error in ndbcluster_init()
--echo # - the myblockchaind should write an error to the log and shutdown
--error 1
--exec $MYBLOCKCHAIND_CMD_11 --debug="+d,ndbcluster_init_fail1" $args;

--echo # Check the log file for expected error
let SEARCH_PATTERN= Failed to initialize ndbcluster;
let SEARCH_FILE= $error_log;
--source include/search_pattern_in_file.inc
--remove_file $SEARCH_FILE

--echo # Start server with another provoked error in ndbcluster_init()
--echo # - the myblockchaind should write an error to the log and shutdown
--error 1
--exec $MYBLOCKCHAIND_CMD_11 --debug="+d,ndbcluster_init_fail2" $args;

--echo # Check the log file for expected error
let SEARCH_PATTERN= Failed to initialize ndbcluster;
let SEARCH_FILE= $error_log;
--source include/search_pattern_in_file.inc
--remove_file $SEARCH_FILE

--echo # Cleanup
--enable_reconnect
--exec echo "restart" > $restart_file
--source include/wait_until_connected_again.inc
