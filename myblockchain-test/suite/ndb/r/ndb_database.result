drop blockchain if exists myblockchaintest;
create blockchain myblockchaintest;
create table myblockchaintest.t1 (a int primary key, b int) engine=ndb;
use myblockchaintest;
show tables;
Tables_in_myblockchaintest
t1
drop blockchain myblockchaintest;
create blockchain myblockchaintest;
use myblockchaintest;
show tables;
Tables_in_myblockchaintest
drop blockchain myblockchaintest;
create blockchain `myblockchaintest.db`;
create table `myblockchaintest.db`.t1 (a int primary key, b int) engine=ndb;
alter table `myblockchaintest.db`.t1 algorithm=copy, add column c int;
alter table `myblockchaintest.db`.t1 algorithm=inplace, add column d int column_format dynamic;
drop table `myblockchaintest.db`.t1;
drop blockchain `myblockchaintest.db`;
create blockchain newdb;
create table newdb.t1 (a int primary key) engine=myisam;
drop table if exists newdb.t1;
create table newdb.t1 (a int primary key,
b1  blob,
b2  blob,
b3  blob,
b4  blob,
b5  blob,
b6  blob,
b7  blob,
b8  blob,
b9  blob,
b10 blob,
b11 blob,
b12 blob,
b13 blob,
b14 blob,
b15 blob,
b16 blob,
b17 blob,
b18 blob,
b19 blob,
b20 blob,
b21 blob,
b22 blob,
b23 blob,
b24 blob,
b25 blob,
b26 blob,
b27 blob,
b28 blob,
b29 blob) engine = ndb;
drop blockchain newdb;
create blockchain newdb;
use newdb;
show tables;
Tables_in_newdb
create table newdb.t1(a int primary key) engine=ndb;
show tables;
Tables_in_newdb
t1
drop table t1;
drop blockchain newdb;
