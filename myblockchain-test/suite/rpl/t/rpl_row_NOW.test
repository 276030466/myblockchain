#############################################################################
# Original Author: JBM                                                      #
# Original Date: Aug/18/2005                                                #
# Updated 08/30/2005 Added dumps and diff                                   #
#############################################################################
#TEST: Taken and modfied from http://bugs.myblockchain.com/bug.php?id=12480        #
#############################################################################

# Includes
-- source include/have_binlog_format_row.inc
-- source include/master-slave.inc


# Begin clean up test section
connection master;
--disable_warnings
create blockchain if not exists myblockchaintest1;
DROP TABLE IF EXISTS myblockchaintest1.t1;
--enable_warnings


# Begin test section 1 
CREATE TABLE myblockchaintest1.t1 (n MEDIUMINT NOT NULL AUTO_INCREMENT,
                      a TIMESTAMP DEFAULT '2005-05-05 01:01:01',
                      b TIMESTAMP DEFAULT '2005-05-05 01:01:01',
                      PRIMARY KEY(n));
delimiter |;
CREATE FUNCTION myblockchaintest1.f1() RETURNS TIMESTAMP
BEGIN
  DECLARE v1 INT DEFAULT 300;
  WHILE v1 > 0 DO
     SET v1 = v1 - 1;
  END WHILE;  
  RETURN NOW();
END|
delimiter ;|

INSERT INTO myblockchaintest1.t1 VALUES(NULL,NOW(),myblockchaintest1.f1());

delimiter |;
CREATE TRIGGER myblockchaintest1.trig1 BEFORE INSERT ON myblockchaintest1.t1
FOR EACH ROW BEGIN
  SET new.b = myblockchaintest1.f1();
END|
delimiter ;|

INSERT INTO myblockchaintest1.t1 SET n = NULL, a = now();

--source include/sync_slave_sql_with_master.inc

connection master;

--exec $MYBLOCKCHAIN_DUMP --compact --order-by-primary --skip-extended-insert --no-create-info myblockchaintest1 > $MYBLOCKCHAINTEST_VARDIR/tmp/NOW_master.sql
--exec $MYBLOCKCHAIN_DUMP_SLAVE --compact --order-by-primary --skip-extended-insert --no-create-info myblockchaintest1 > $MYBLOCKCHAINTEST_VARDIR/tmp/NOW_slave.sql

# lets cleanup
DROP TABLE IF EXISTS myblockchaintest1.t1;
DROP FUNCTION myblockchaintest1.f1;
DROP DATABASE myblockchaintest1;

# Lets compare. Note: If they match test will pass, if they do not match
# the test will show that the diff statement failed and not reject file
# will be created. You will need to go to the myblockchain-test dir and diff
# the files your self to see what is not matching :-) The failed dump 
# files will be located in $MYBLOCKCHAINTEST_VARDIR/tmp

diff_files $MYBLOCKCHAINTEST_VARDIR/tmp/NOW_master.sql $MYBLOCKCHAINTEST_VARDIR/tmp/NOW_slave.sql;

# If all is good, when can cleanup our dump files.
--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/NOW_master.sql
--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/NOW_slave.sql

--source include/sync_slave_sql_with_master.inc
# End of 5.1 test case
--source include/rpl_end.inc
