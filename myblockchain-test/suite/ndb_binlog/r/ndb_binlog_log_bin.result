drop table if exists t1,t2,t3;
reset master;
drop table if exists t1,t2,t3;
reset master;
set SQL_LOG_BIN=0;
create blockchain myblockchaintest;
use myblockchaintest;
create table t1 (a int key, b int) engine=ndb;
create table t2 (a int key, b int) engine=ndb;
insert into t1 values (1,1);
alter table t1 add c int;
Warnings:
Warning	1478	Converted FIXED field 'c' to DYNAMIC to enable on-line ADD COLUMN
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
reset master;
use myblockchaintest;
insert into t2 values (1,1);
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
myblockchaind-bin.000001	#	Query	#	#	BEGIN
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchaintest.t2)
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchain.ndb_apply_status)
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: #
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
myblockchaind-bin.000001	#	Query	#	#	COMMIT
reset master;
use myblockchaintest;
drop table t1;
drop table t2;
create table t1 (d int key, e int) engine=ndb;
create table t2 (d int key, e int) engine=ndb;
insert into t1 values (1,1);
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
myblockchaind-bin.000001	#	Query	#	#	BEGIN
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchaintest.t2)
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchain.ndb_apply_status)
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: #
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
myblockchaind-bin.000001	#	Query	#	#	COMMIT
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; DROP TABLE `t1` /* generated by server */
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; DROP TABLE `t2` /* generated by server */
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; create table t1 (d int key, e int) engine=ndb
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; create table t2 (d int key, e int) engine=ndb
myblockchaind-bin.000001	#	Query	#	#	BEGIN
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchaintest.t1)
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchain.ndb_apply_status)
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: #
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
myblockchaind-bin.000001	#	Query	#	#	COMMIT
use myblockchaintest;
insert into t2 values (1,1);
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; drop table `myblockchaintest`.`t1`
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; drop table `myblockchaintest`.`t2`
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; create table t1 (d int key, e int) engine=ndb
myblockchaind-bin.000001	#	Query	#	#	use `myblockchaintest`; create table t2 (d int key, e int) engine=ndb
myblockchaind-bin.000001	#	Query	#	#	BEGIN
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchaintest.t1)
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchain.ndb_apply_status)
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: #
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
myblockchaind-bin.000001	#	Query	#	#	COMMIT
myblockchaind-bin.000001	#	Query	#	#	BEGIN
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchaintest.t2)
myblockchaind-bin.000001	#	Table_map	#	#	table_id: # (myblockchain.ndb_apply_status)
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: #
myblockchaind-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
myblockchaind-bin.000001	#	Query	#	#	COMMIT
drop blockchain myblockchaintest;
