# Tests for PERFORMANCE_SCHEMA
# Make sure myblockchain_upgrade does not destroy data in a 'performance_schema'
# blockchain.
# 

--source include/not_embedded.inc
--source include/have_perfschema.inc

# Some initial settings + Preemptive cleanup
let $MYBLOCKCHAIND_DATADIR= `SELECT @@datadir`;
let $err_file= $MYBLOCKCHAINTEST_VARDIR/tmp/pfs_upgrade_view.err;
let $out_file= $MYBLOCKCHAINTEST_VARDIR/tmp/pfs_upgrade_view.out;
--error 0,1
--remove_file $out_file
--error 0,1
--remove_file $err_file

--disable_warnings
drop view if exists test.user_view;
--enable_warnings

--echo "Testing myblockchain_upgrade with VIEW performance_schema.user_view"

create view test.user_view as select "Not supposed to be here";

--error 0,1
--remove_file $MYBLOCKCHAIND_DATADIR/performance_schema/user_view.frm
--copy_file $MYBLOCKCHAIND_DATADIR/test/user_view.frm $MYBLOCKCHAIND_DATADIR/performance_schema/user_view.frm

# Make sure the view is visible
use performance_schema;
show tables like "user_view";

--source suite/perfschema/include/upgrade_check.inc

# Make sure the view is still visible
show tables like "user_view";

use test;

--remove_file $MYBLOCKCHAIND_DATADIR/performance_schema/user_view.frm
drop view test.user_view;
