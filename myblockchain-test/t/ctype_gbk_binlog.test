
-- source include/force_binlog_format_statement.inc
-- source include/have_gbk.inc

RESET MASTER;
SET NAMES gbk;
--character_set gbk

CREATE TABLE t1 (
  f1 BLOB
) DEFAULT CHARSET=gbk;

delimiter |;
CREATE PROCEDURE p1(IN val BLOB)
BEGIN
     SET @tval = val;
     SET @sql_cmd = CONCAT_WS(' ', 'insert into t1(f1) values(?)');
     PREPARE stmt FROM @sql_cmd;
     EXECUTE stmt USING @tval;
     DEALLOCATE PREPARE stmt;
END|
delimiter ;|

SET @`tcontent`:=_binary 0x50434B000900000000000000E9000000 COLLATE `binary`/*!*/;
CALL p1(@`tcontent`);

FLUSH LOGS;
DROP PROCEDURE p1;
RENAME TABLE t1 to t2;

let $MYBLOCKCHAIND_DATADIR= `select @@datadir`;
copy_file $MYBLOCKCHAIND_DATADIR/master-bin.000001 $MYBLOCKCHAIND_DATADIR/master-bin.saved;
# Reset GTIDs
RESET MASTER;
--exec $MYBLOCKCHAIN_BINLOG --force-if-open --short-form $MYBLOCKCHAIND_DATADIR/master-bin.saved | $MYBLOCKCHAIN
SELECT hex(f1) FROM t2;
SELECT hex(f1) FROM t1;

DROP PROCEDURE p1;
DROP TABLE t1;
DROP TABLE t2;
--remove_file $MYBLOCKCHAIND_DATADIR/master-bin.saved

--source include/restore_default_binlog_format.inc
