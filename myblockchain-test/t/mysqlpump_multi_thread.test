# Created: 2015-05-15  Lalit Choudhary

-- source include/not_embedded.inc
-- source include/big_test.inc

--echo #
--echo # WL#7755  myblockchainpump: Extend myblockchaindump functionalities
--echo #

# Creating DB's and populating different types of data init for MYBLOCKCHAINPUMP testing.
-- source include/myblockchainpump_stmt.inc

--echo

# parallel-schemas option testing

--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=3:db1 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_1.sql
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=3:db1,db1_1gb --blockchains db1 db1_1gb > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_2.sql
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=3:db1 --parallel-schemas=db2,db3 --include-blockchains=db1,db2,db3  > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_3.sql
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=db3 --blockchains db1 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_4.sql
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=1 --blockchains db2  > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_5.sql

DROP DATABASE db1;
DROP DATABASE db1_1gb;
--exec $MYBLOCKCHAIN < $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_2.sql

--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=2:db2,db1 --parallel-schemas=3:db3 --include-blockchains=db1,db2,db3 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_6.sql
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=2:db3,db1 --parallel-schemas=1:db3,db1 --parallel-schemas=2:db3,db1,db1_1gb --include-blockchains=db1,db1_1gb,db3 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_7.sql
--exec $MYBLOCKCHAIN_PUMP --default-parallelism=1 --parallel-schemas=db2,db3 --include-blockchains=db2,db3  > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_8.sql
--exec $MYBLOCKCHAIN_PUMP --default-parallelism=2 --parallel-schemas=4 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_10.sql

DROP DATABASE db2;
DROP DATABASE db3;
--exec $MYBLOCKCHAIN < $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_8.sql

#--exec $MYBLOCKCHAIN_PUMP --parallel-schemas > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_11.sql
#--exec $MYBLOCKCHAIN_PUMP --parallel-schemas= > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_12.sql
#--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=string_edjdjh > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_13.sql

# chrashing
#--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=%&* > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_14.sql

# default-parallelism option testing
--exec $MYBLOCKCHAIN_PUMP --default-parallelism=3 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_16.sql
--exec $MYBLOCKCHAIN_PUMP --default-parallelism=0 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_17.sql
--exec $MYBLOCKCHAIN_PUMP --default-parallelism=2 --single-transaction > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_18.sql
--exec $MYBLOCKCHAIN_PUMP --default-parallelism=3 --default-parallelism=1 --default-parallelism=2 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_19.sql

# myblockchainpump: [ERROR] myblockchainpump: option '--default-parallelism' requires an argument
#--exec $MYBLOCKCHAIN_PUMP --default-parallelism > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_20.sql

# myblockchainpump: [ERROR] myblockchainpump: Empty value for 'default-parallelism' specified
#--exec $MYBLOCKCHAIN_PUMP --default-parallelism='' > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_21.sql

#myblockchainpump: [ERROR] Unknown suffix 's' used for variable 'default-parallelism' (value 'sgdhy7')
#--exec $MYBLOCKCHAIN_PUMP --default-parallelism='sgdhy7' --include-blockchains=db1 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_22.sql

# myblockchainpump: [ERROR] myblockchainpump: Error while setting value '#@' to 'default-parallelism'
#--exec $MYBLOCKCHAIN_PUMP --default-parallelism=#@&%* --include-blockchains=db1 > $MYBLOCKCHAINTEST_VARDIR/tmp/output_file_23.sql

--remove_files_wildcard $MYBLOCKCHAINTEST_VARDIR/tmp/  output_file*

# --result-file and --watch-progress
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=1:db1 --exclude-blockchains=mtr,myblockchain,sys,test --watch-progress 2>$MYBLOCKCHAINTEST_VARDIR/tmp/watch_progress_1.log  --result-file=$MYBLOCKCHAINTEST_VARDIR/tmp/result_file_1.sql
--exec $MYBLOCKCHAIN_PUMP --parallel-schemas=2:db3 --exclude-blockchains=mtr,myblockchain,sys,test --watch-progress 2>$MYBLOCKCHAINTEST_VARDIR/tmp/watch_progress_2.log  > $MYBLOCKCHAINTEST_VARDIR/tmp/result_file_2.sql

DROP DATABASE db1;
DROP DATABASE db2;
DROP DATABASE db3;
DROP DATABASE db1_1gb;
--exec $MYBLOCKCHAIN < $MYBLOCKCHAINTEST_VARDIR/tmp/result_file_1.sql
DROP DATABASE db1;
DROP DATABASE db2;
DROP DATABASE db3;
DROP DATABASE db1_1gb;
--exec $MYBLOCKCHAIN < $MYBLOCKCHAINTEST_VARDIR/tmp/result_file_2.sql

--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/result_file_1.sql
--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/result_file_2.sql

# Cleanup
DROP DATABASE db1;
DROP DATABASE db2;
DROP DATABASE db3;
DROP DATABASE db1_1gb;

