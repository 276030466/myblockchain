# Embedded server doesn't support restarting.
--source include/not_embedded.inc

# Prepare MYBLOCKCHAIND_DATADIR and MYBLOCKCHAIND_BOOTSTRAP_CMD.
# Add the datadir to the bootstrap command.
--let $MYBLOCKCHAIND_DATADIR = `SELECT @@datadir`
--let $MYBLOCKCHAIND_BOOTSTRAP_CMD = $MYBLOCKCHAIND_BOOTSTRAP_CMD --datadir=$MYBLOCKCHAIND_DATADIR --default-storage-engine=MyISAM --default-tmp-storage-engine=MyISAM

###########################################################################
# 1. Check that --bootstrap reads from stdin
###########################################################################

# Stop server
--source include/shutdown_myblockchaind.inc

--write_file $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap_test.sql
USE test;
CREATE TABLE t1(a INT);
EOF

--exec $MYBLOCKCHAIND_BOOTSTRAP_CMD < $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap_test.sql >> $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap.log 2>&1

--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap_test.sql

###########################################################################
# 2. Check that --bootstrap of file with SQL error returns error
###########################################################################

--write_file $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap_error.sql
USE test;
CREATE TABLE t2;
EOF

--error 1
--exec $MYBLOCKCHAIND_BOOTSTRAP_CMD  < $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap_error.sql >> $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap.log 2>&1

--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap_error.sql

# Start server
--source include/start_myblockchaind.inc

# Drop t1 from the previous test (1).
DROP TABLE t1;

# Table t2 should not exists
--error ER_BAD_TABLE_ERROR
DROP TABLE t2;

###########################################################################
# 3. Bootstrap with a query larger than 2*thd->net.max_packet
###########################################################################

# Prepare a long query.
# NOTE: no need to save max_allowed_packet value as the server will be restarted.

SET @@global.max_allowed_packet = 100 * @@global.max_allowed_packet;

CREATE TABLE t1 SELECT 2 AS a, CONCAT(REPEAT('MyBlockchain', @@max_allowed_packet/10), ';') AS b;

--replace_result $MYBLOCKCHAINTEST_VARDIR VARDIR
--eval SELECT * INTO OUTFILE '$MYBLOCKCHAINTEST_VARDIR/tmp/long_query.sql' FROM t1

# Stop server
--source include/shutdown_myblockchaind.inc

--error 1
--exec $MYBLOCKCHAIND_BOOTSTRAP_CMD < $MYBLOCKCHAINTEST_VARDIR/tmp/long_query.sql >> $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap.log 2>&1

--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/long_query.sql

# Start server
--source include/start_myblockchaind.inc

SHOW CREATE TABLE t1;
SELECT a, LENGTH(b) FROM t1;

DROP TABLE t1;
--remove_file $MYBLOCKCHAINTEST_VARDIR/tmp/bootstrap.log
