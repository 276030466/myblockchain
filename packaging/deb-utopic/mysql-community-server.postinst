#!/bin/bash

# Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

. /usr/share/debconf/confmodule

take_upstart_job_backup () {
	if [ -e "/etc/init/myblockchain.conf" ] && [ -d "/var/lib/myblockchain" ];
	then
		mv /etc/init/myblockchain.conf /var/lib/myblockchain/.myblockchain.conf.backup
	fi
}

case "$1" in
	configure)

	if [ -z "$2" ];
	then

		set -e

		MYBLOCKCHAINDATA=/var/lib/myblockchain
		MYBLOCKCHAINFILES=/var/lib/myblockchain-files

		if [ ! "$(ls -A ${MYBLOCKCHAINDATA})" ] && [ -d ${MYBLOCKCHAINFILES} ];
		then
			db_get myblockchain-community-server/root-pass && PASSWD=${RET}
			if [ ! -z "${PASSWD}" ];
			then
				SQL=/var/lib/myblockchain-files/SQL
				touch ${SQL}
				chmod 600 ${SQL}
				chown myblockchain:myblockchain ${SQL}

				db_set myblockchain-community-server/root-pass ""
				db_set myblockchain-community-server/re-root-pass ""
				cat << EOF > ${SQL}
USE myblockchain;
UPDATE user SET authentication_string=PASSWORD('${PASSWD}') WHERE user='root';
EOF
				PASSWD=""
				su - myblockchain -s /bin/bash -c "/usr/sbin/myblockchaind --initialize-insecure=on --init-file=${SQL} 2>&1 > /dev/null"
				rm -f ${SQL}
			else
				su - myblockchain -s /bin/bash -c "/usr/sbin/myblockchaind --initialize-insecure=on 2>&1 > /dev/null"
				su - myblockchain -s /bin/bash -c "/usr/sbin/myblockchaind --log_error_verbosity=2 2>&1 > /dev/null &"
				while [ ! -e $(my_print_defaults myblockchaind | grep pid-file | cut -d= -f2) ]; do sleep 1; done
				myblockchain -e "INSTALL PLUGIN auth_socket SONAME 'auth_socket.so'"
				myblockchain -e "USE myblockchain; UPDATE user SET plugin='auth_socket' WHERE user='root'"
				myblockchainadmin shutdown
			fi
		fi

		set +e

	fi

	;;

	abort-upgrade|abort-remove|abort-configure)

	;;

	*)
	exit 1
	;;
esac

db_stop

take_upstart_job_backup

#DEBHELPER#

exit 0
