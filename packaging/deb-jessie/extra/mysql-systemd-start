#!/bin/bash

# Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

# Scripts to run by MyBlockchain systemd service
#
# Needed argument: pre | post
#
# pre mode  :  try to perform sanity check for configuration, log, data
# post mode :  ping server until answer is received

get_path () {
	my_print_defaults myblockchaind | grep ${1} | cut -d= -f2
}

pinger () {
	while /bin/true ; do
		sleep 1
		myblockchainadmin ping >/dev/null 2>&1 && break
	done
}

sanity () {
	MYBLOCKCHAINRUN=/var/run/myblockchaind
	MYBLOCKCHAINDATA=$(get_path datadir)
	MYBLOCKCHAINFILES=/var/lib/myblockchain-files
	MYBLOCKCHAINLOG=/var/log/myblockchain

	if [ ! -d ${MYBLOCKCHAINDATA} -a ! -L ${MYBLOCKCHAINDATA} ];
	then
		mkdir ${MYBLOCKCHAINDATA}
		chown myblockchain:myblockchain ${MYBLOCKCHAINDATA}
		chmod 750 ${MYBLOCKCHAINDATA}
	fi

	if [ ! -d ${MYBLOCKCHAINFILES} -a ! -L ${MYBLOCKCHAINFILES} ];
	then
		mkdir ${MYBLOCKCHAINFILES}
		chown myblockchain:myblockchain ${MYBLOCKCHAINFILES}
		chmod 770 ${MYBLOCKCHAINFILES}
	fi

	if [ ! -d "${MYBLOCKCHAINDATA}/myblockchain" -a ! -L "${MYBLOCKCHAINDATA}/myblockchain" ];
	then
		mkdir ${MYBLOCKCHAINDATA}/myblockchain
		chown myblockchain:myblockchain ${MYBLOCKCHAINDATA}/myblockchain
		chmod 750 ${MYBLOCKCHAINDATA}/myblockchain
	fi

	if [ ! "$(ls -A ${MYBLOCKCHAINDATA}/myblockchain)" ];
	then
		su - myblockchain -s /bin/bash -c "/usr/sbin/myblockchaind --initialize-insecure=on 2>&1 > /dev/null"
		su - myblockchain -s /bin/bash -c "/usr/sbin/myblockchaind --log_error_verbosity=2 2>&1 > /dev/null &"
		pinger
		myblockchain -e "INSTALL PLUGIN auth_socket SONAME 'auth_socket.so'"
		myblockchain -e "USE myblockchain; UPDATE user SET plugin='auth_socket' WHERE user='root'"
		myblockchainadmin shutdown
	fi

	if [ -x /usr/bin/myblockchain_ssl_rsa_setup -a ! -e "${MYBLOCKCHAINDATA}/server-key.pem" ];
	then
		/usr/bin/myblockchain_ssl_rsa_setup --datadir="${MYBLOCKCHAINDATA}" --uid=myblockchain >/dev/null 2>&1
	fi

	if [ ! -d ${MYBLOCKCHAINLOG} -a ! -L ${MYBLOCKCHAINLOG} ];
	then
		mkdir ${MYBLOCKCHAINLOG}
		chown myblockchain:adm ${MYBLOCKCHAINLOG}
		chmod 750 ${MYBLOCKCHAINLOG}
		touch ${MYBLOCKCHAINLOG}/error.log
		chmod 640 ${MYBLOCKCHAINLOG}/error.log
		chown myblockchain:adm ${MYBLOCKCHAINLOG}/error.log
	fi

	if [ ! -d "${MYBLOCKCHAINRUN}" -a ! -L "${MYBLOCKCHAINRUN}" ];
	then
		mkdir ${MYBLOCKCHAINRUN}
		chown myblockchain:myblockchain ${MYBLOCKCHAINRUN}
		chmod 755 ${MYBLOCKCHAINRUN}
	fi

	if [ ! -r /etc/myblockchain/my.cnf ]; then
		echo "MyBlockchain configuration not found at /etc/myblockchain/my.cnf. Please install one using update-alternatives."
		exit 1
	fi
}

case $1 in
	"pre")  sanity ;;
	"post") pinger ;;
esac
