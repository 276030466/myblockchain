/*
 Copyright (c) 2012, 2014 Oracle and/or its affiliates. All rights reserved.

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; version 2 of the License.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
*/
/*
 * ndbjtie_unit_tests_classes.cpp
 */

#include <my_config.h>
#include <assert.h>
#include <string.h>

#include "ndbjtie_unit_tests_consts.hpp"
#include "NdbApi.hpp"
//#include "NdbError.hpp"

// name/value pair
struct Constant {
    const char * const name;
    const int64_t value;
};

// the list of defined constants
static Constant constants[] = {
    { "com.myblockchain.ndbjtie.ndbapi.Ndb$PartitionSpecConst$SpecType.PS_NONE",
      Ndb::PartitionSpec::/*_enum SpecType_*/PS_NONE },
    { "com.myblockchain.ndbjtie.ndbapi.Ndb$PartitionSpecConst$SpecType.PS_USER_DEFINED",
      Ndb::PartitionSpec::/*_enum SpecType_*/PS_USER_DEFINED },
    { "com.myblockchain.ndbjtie.ndbapi.Ndb$PartitionSpecConst$SpecType.PS_DISTR_KEY_PART_PTR",
      Ndb::PartitionSpec::/*_enum SpecType_*/PS_DISTR_KEY_PART_PTR },
    { "com.myblockchain.ndbjtie.ndbapi.Ndb$PartitionSpecConst$SpecType.PS_DISTR_KEY_RECORD",
      Ndb::PartitionSpec::/*_enum SpecType_*/PS_DISTR_KEY_RECORD },
    { "com.myblockchain.ndbjtie.ndbapi.NdbBlob$State.Idle",
      NdbBlob::/*_enum State_*/Idle },
    { "com.myblockchain.ndbjtie.ndbapi.NdbBlob$State.Prepared",
      NdbBlob::/*_enum State_*/Prepared },
    { "com.myblockchain.ndbjtie.ndbapi.NdbBlob$State.Active",
      NdbBlob::/*_enum State_*/Active },
    { "com.myblockchain.ndbjtie.ndbapi.NdbBlob$State.Closed",
      NdbBlob::/*_enum State_*/Closed },
    { "com.myblockchain.ndbjtie.ndbapi.NdbBlob$State.Invalid",
      NdbBlob::/*_enum State_*/Invalid },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$ArrayType.ArrayTypeFixed",
      NdbDictionary::Column::/*_enum ArrayType_*/ArrayTypeFixed },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$ArrayType.ArrayTypeShortVar",
      NdbDictionary::Column::/*_enum ArrayType_*/ArrayTypeShortVar },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$ArrayType.ArrayTypeMediumVar",
      NdbDictionary::Column::/*_enum ArrayType_*/ArrayTypeMediumVar },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$StorageType.StorageTypeMemory",
      NdbDictionary::Column::/*_enum StorageType_*/StorageTypeMemory },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$StorageType.StorageTypeDisk",
      NdbDictionary::Column::/*_enum StorageType_*/StorageTypeDisk },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Undefined",
      NdbDictionary::Column::/*_enum Type_*/Undefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Tinyint",
      NdbDictionary::Column::/*_enum Type_*/Tinyint },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Tinyunsigned",
      NdbDictionary::Column::/*_enum Type_*/Tinyunsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Smallint",
      NdbDictionary::Column::/*_enum Type_*/Smallint },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Smallunsigned",
      NdbDictionary::Column::/*_enum Type_*/Smallunsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Mediumint",
      NdbDictionary::Column::/*_enum Type_*/Mediumint },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Mediumunsigned",
      NdbDictionary::Column::/*_enum Type_*/Mediumunsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Int",
      NdbDictionary::Column::/*_enum Type_*/Int },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Unsigned",
      NdbDictionary::Column::/*_enum Type_*/Unsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Bigint",
      NdbDictionary::Column::/*_enum Type_*/Bigint },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Bigunsigned",
      NdbDictionary::Column::/*_enum Type_*/Bigunsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Float",
      NdbDictionary::Column::/*_enum Type_*/Float },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Double",
      NdbDictionary::Column::/*_enum Type_*/Double },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Olddecimal",
      NdbDictionary::Column::/*_enum Type_*/Olddecimal },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Olddecimalunsigned",
      NdbDictionary::Column::/*_enum Type_*/Olddecimalunsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Decimal",
      NdbDictionary::Column::/*_enum Type_*/Decimal },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Decimalunsigned",
      NdbDictionary::Column::/*_enum Type_*/Decimalunsigned },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Char",
      NdbDictionary::Column::/*_enum Type_*/Char },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Varchar",
      NdbDictionary::Column::/*_enum Type_*/Varchar },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Binary",
      NdbDictionary::Column::/*_enum Type_*/Binary },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Varbinary",
      NdbDictionary::Column::/*_enum Type_*/Varbinary },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Datetime",
      NdbDictionary::Column::/*_enum Type_*/Datetime },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Date",
      NdbDictionary::Column::/*_enum Type_*/Date },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Blob",
      NdbDictionary::Column::/*_enum Type_*/Blob },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Text",
      NdbDictionary::Column::/*_enum Type_*/Text },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Bit",
      NdbDictionary::Column::/*_enum Type_*/Bit },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Longvarchar",
      NdbDictionary::Column::/*_enum Type_*/Longvarchar },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Longvarbinary",
      NdbDictionary::Column::/*_enum Type_*/Longvarbinary },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Time",
      NdbDictionary::Column::/*_enum Type_*/Time },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Year",
      NdbDictionary::Column::/*_enum Type_*/Year },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ColumnConst$Type.Timestamp",
      NdbDictionary::Column::/*_enum Type_*/Timestamp },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$EventDurability.ED_UNDEFINED",
      NdbDictionary::Event::/*_enum EventDurability_*/ED_UNDEFINED },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$EventDurability.ED_PERMANENT",
      NdbDictionary::Event::/*_enum EventDurability_*/ED_PERMANENT },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$EventReport.ER_UPDATED",
      NdbDictionary::Event::/*_enum EventReport_*/ER_UPDATED },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$EventReport.ER_ALL",
      NdbDictionary::Event::/*_enum EventReport_*/ER_ALL },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$EventReport.ER_SUBSCRIBE",
      NdbDictionary::Event::/*_enum EventReport_*/ER_SUBSCRIBE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_INSERT",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_INSERT },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_DELETE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_DELETE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_UPDATE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_UPDATE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_DROP",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_DROP },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_ALTER",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_ALTER },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_CREATE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_CREATE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_GCP_COMPLETE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_GCP_COMPLETE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_CLUSTER_FAILURE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_CLUSTER_FAILURE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_STOP",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_STOP },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_NODE_FAILURE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_NODE_FAILURE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_SUBSCRIBE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_SUBSCRIBE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_UNSUBSCRIBE",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_UNSUBSCRIBE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$EventConst$TableEvent.TE_ALL",
      NdbDictionary::Event::/*_enum TableEvent_*/TE_ALL },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$IndexConst$Type.Undefined",
      NdbDictionary::Index::/*_enum Type_*/Undefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$IndexConst$Type.UniqueHashIndex",
      NdbDictionary::Index::/*_enum Type_*/UniqueHashIndex },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$IndexConst$Type.OrderedIndex",
      NdbDictionary::Index::/*_enum Type_*/OrderedIndex },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$NdbRecordFlags.RecMysqldShrinkVarchar",
      NdbDictionary::/*_enum NdbRecordFlags_*/RecMysqldShrinkVarchar },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$NdbRecordFlags.RecMysqldBitfield",
      NdbDictionary::/*_enum NdbRecordFlags_*/RecMysqldBitfield },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.FragUndefined",
      NdbDictionary::Object::/*_enum FragmentType_*/FragUndefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.FragSingle",
      NdbDictionary::Object::/*_enum FragmentType_*/FragSingle },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.FragAllSmall",
      NdbDictionary::Object::/*_enum FragmentType_*/FragAllSmall },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.FragAllMedium",
      NdbDictionary::Object::/*_enum FragmentType_*/FragAllMedium },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.FragAllLarge",
      NdbDictionary::Object::/*_enum FragmentType_*/FragAllLarge },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.DistrKeyHash",
      NdbDictionary::Object::/*_enum FragmentType_*/DistrKeyHash },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.DistrKeyLin",
      NdbDictionary::Object::/*_enum FragmentType_*/DistrKeyLin },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$FragmentType.UserDefined",
      NdbDictionary::Object::/*_enum FragmentType_*/UserDefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateUndefined",
      NdbDictionary::Object::/*_enum State_*/StateUndefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateOffline",
      NdbDictionary::Object::/*_enum State_*/StateOffline },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateBuilding",
      NdbDictionary::Object::/*_enum State_*/StateBuilding },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateDropping",
      NdbDictionary::Object::/*_enum State_*/StateDropping },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateOnline",
      NdbDictionary::Object::/*_enum State_*/StateOnline },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateBackup",
      NdbDictionary::Object::/*_enum State_*/StateBackup },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$State.StateBroken",
      NdbDictionary::Object::/*_enum State_*/StateBroken },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Store.StoreUndefined",
      NdbDictionary::Object::/*_enum Store_*/StoreUndefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Store.StoreNotLogged",
      NdbDictionary::Object::/*_enum Store_*/StoreNotLogged },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Store.StorePermanent",
      NdbDictionary::Object::/*_enum Store_*/StorePermanent },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.TypeUndefined",
      NdbDictionary::Object::/*_enum Type_*/TypeUndefined },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.SystemTable",
      NdbDictionary::Object::/*_enum Type_*/SystemTable },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.UserTable",
      NdbDictionary::Object::/*_enum Type_*/UserTable },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.UniqueHashIndex",
      NdbDictionary::Object::/*_enum Type_*/UniqueHashIndex },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.OrderedIndex",
      NdbDictionary::Object::/*_enum Type_*/OrderedIndex },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.HashIndexTrigger",
      NdbDictionary::Object::/*_enum Type_*/HashIndexTrigger },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.IndexTrigger",
      NdbDictionary::Object::/*_enum Type_*/IndexTrigger },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.SubscriptionTrigger",
      NdbDictionary::Object::/*_enum Type_*/SubscriptionTrigger },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.ReadOnlyConstraint",
      NdbDictionary::Object::/*_enum Type_*/ReadOnlyConstraint },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.TableEvent",
      NdbDictionary::Object::/*_enum Type_*/TableEvent },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.Tablespace",
      NdbDictionary::Object::/*_enum Type_*/Tablespace },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.LogfileGroup",
      NdbDictionary::Object::/*_enum Type_*/LogfileGroup },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.Datafile",
      NdbDictionary::Object::/*_enum Type_*/Datafile },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$Object$Type.Undofile",
      NdbDictionary::Object::/*_enum Type_*/Undofile },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ObjectConst$Status.New",
      NdbDictionary::Object::/*_enum Status_*/New },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ObjectConst$Status.Changed",
      NdbDictionary::Object::/*_enum Status_*/Changed },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ObjectConst$Status.Retrieved",
      NdbDictionary::Object::/*_enum Status_*/Retrieved },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ObjectConst$Status.Invalid",
      NdbDictionary::Object::/*_enum Status_*/Invalid },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$ObjectConst$Status.Altered",
      NdbDictionary::Object::/*_enum Status_*/Altered },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$RecordType.TableAccess",
      NdbDictionary::/*_enum RecordType_*/TableAccess },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$RecordType.IndexAccess",
      NdbDictionary::/*_enum RecordType_*/IndexAccess },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$TableConst$SingleUserMode.SingleUserModeLocked",
      NdbDictionary::Table::/*_enum SingleUserMode_*/SingleUserModeLocked },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$TableConst$SingleUserMode.SingleUserModeReadOnly",
      NdbDictionary::Table::/*_enum SingleUserMode_*/SingleUserModeReadOnly },
    { "com.myblockchain.ndbjtie.ndbapi.NdbDictionary$TableConst$SingleUserMode.SingleUserModeReadWrite",
      NdbDictionary::Table::/*_enum SingleUserMode_*/SingleUserModeReadWrite },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.NoError",
      NdbError::/*_enum Classification_*/NoError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.ApplicationError",
      NdbError::/*_enum Classification_*/ApplicationError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.NoDataFound",
      NdbError::/*_enum Classification_*/NoDataFound },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.ConstraintViolation",
      NdbError::/*_enum Classification_*/ConstraintViolation },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.SchemaError",
      NdbError::/*_enum Classification_*/SchemaError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.UserDefinedError",
      NdbError::/*_enum Classification_*/UserDefinedError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.InsufficientSpace",
      NdbError::/*_enum Classification_*/InsufficientSpace },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.TemporaryResourceError",
      NdbError::/*_enum Classification_*/TemporaryResourceError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.NodeRecoveryError",
      NdbError::/*_enum Classification_*/NodeRecoveryError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.OverloadError",
      NdbError::/*_enum Classification_*/OverloadError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.TimeoutExpired",
      NdbError::/*_enum Classification_*/TimeoutExpired },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.UnknownResultError",
      NdbError::/*_enum Classification_*/UnknownResultError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.InternalError",
      NdbError::/*_enum Classification_*/InternalError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.FunctionNotImplemented",
      NdbError::/*_enum Classification_*/FunctionNotImplemented },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.UnknownErrorCode",
      NdbError::/*_enum Classification_*/UnknownErrorCode },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.NodeShutdown",
      NdbError::/*_enum Classification_*/NodeShutdown },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.SchemaObjectExists",
      NdbError::/*_enum Classification_*/SchemaObjectExists },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Classification.InternalTemporary",
      NdbError::/*_enum Classification_*/InternalTemporary },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Status.Success",
      NdbError::/*_enum Status_*/Success },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Status.TemporaryError",
      NdbError::/*_enum Status_*/TemporaryError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Status.PermanentError",
      NdbError::/*_enum Status_*/PermanentError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbErrorConst$Status.UnknownResult",
      NdbError::/*_enum Status_*/UnknownResult },
    { "com.myblockchain.ndbjtie.ndbapi.NdbEventOperation$State.EO_CREATED",
      NdbEventOperation::/*_enum State_*/EO_CREATED },
    { "com.myblockchain.ndbjtie.ndbapi.NdbEventOperation$State.EO_EXECUTING",
      NdbEventOperation::/*_enum State_*/EO_EXECUTING },
    { "com.myblockchain.ndbjtie.ndbapi.NdbEventOperation$State.EO_DROPPED",
      NdbEventOperation::/*_enum State_*/EO_DROPPED },
    { "com.myblockchain.ndbjtie.ndbapi.NdbEventOperation$State.EO_ERROR",
      NdbEventOperation::/*_enum State_*/EO_ERROR },
    { "com.myblockchain.ndbjtie.ndbapi.NdbIndexScanOperation$BoundType.BoundLE",
      NdbIndexScanOperation::/*_enum BoundType_*/BoundLE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbIndexScanOperation$BoundType.BoundLT",
      NdbIndexScanOperation::/*_enum BoundType_*/BoundLT },
    { "com.myblockchain.ndbjtie.ndbapi.NdbIndexScanOperation$BoundType.BoundGE",
      NdbIndexScanOperation::/*_enum BoundType_*/BoundGE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbIndexScanOperation$BoundType.BoundGT",
      NdbIndexScanOperation::/*_enum BoundType_*/BoundGT },
    { "com.myblockchain.ndbjtie.ndbapi.NdbIndexScanOperation$BoundType.BoundEQ",
      NdbIndexScanOperation::/*_enum BoundType_*/BoundEQ },
    { "com.myblockchain.ndbjtie.ndbapi.NdbIndexScanOperation$NotSpecified.MaxRangeNo",
      NdbIndexScanOperation::/*_enum NotSpecified_*/MaxRangeNo },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_ABORTOPTION",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_ABORTOPTION },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_GETVALUE",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_GETVALUE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_SETVALUE",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_SETVALUE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_PARTITION_ID",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_PARTITION_ID },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_INTERPRETED",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_INTERPRETED },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_ANYVALUE",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_ANYVALUE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperation$OperationOptionsConst$Flags.OO_CUSTOMDATA",
      NdbOperation::OperationOptions::/*_enum Flags_*/OO_CUSTOMDATA },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$AbortOption.DefaultAbortOption",
      NdbOperation::/*_enum AbortOption_*/DefaultAbortOption },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$AbortOption.AbortOnError",
      NdbOperation::/*_enum AbortOption_*/AbortOnError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$AbortOption.AO_IgnoreError",
      NdbOperation::/*_enum AbortOption_*/AO_IgnoreError },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$LockMode.LM_Read",
      NdbOperation::/*_enum LockMode_*/LM_Read },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$LockMode.LM_Exclusive",
      NdbOperation::/*_enum LockMode_*/LM_Exclusive },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$LockMode.LM_CommittedRead",
      NdbOperation::/*_enum LockMode_*/LM_CommittedRead },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$LockMode.LM_Dirty",
      NdbOperation::/*_enum LockMode_*/LM_Dirty },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$LockMode.LM_SimpleRead",
      NdbOperation::/*_enum LockMode_*/LM_SimpleRead },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$Type.PrimaryKeyAccess",
      NdbOperation::/*_enum Type_*/PrimaryKeyAccess },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$Type.UniqueIndexAccess",
      NdbOperation::/*_enum Type_*/UniqueIndexAccess },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$Type.TableScan",
      NdbOperation::/*_enum Type_*/TableScan },
    { "com.myblockchain.ndbjtie.ndbapi.NdbOperationConst$Type.OrderedIndexScan",
      NdbOperation::/*_enum Type_*/OrderedIndexScan },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_LE",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_LE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_LT",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_LT },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_GE",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_GE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_GT",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_GT },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_EQ",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_EQ },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_NE",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_NE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_LIKE",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_LIKE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$BinaryCondition.COND_NOT_LIKE",
      NdbScanFilter::/*_enum BinaryCondition_*/COND_NOT_LIKE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$Error.FilterTooLarge",
      NdbScanFilter::/*_enum Error_*/FilterTooLarge },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$Group.AND",
      NdbScanFilter::/*_enum Group_*/AND },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$Group.OR",
      NdbScanFilter::/*_enum Group_*/OR },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$Group.NAND",
      NdbScanFilter::/*_enum Group_*/NAND },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanFilter$Group.NOR",
      NdbScanFilter::/*_enum Group_*/NOR },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_TupScan",
      NdbScanOperation::/*_enum ScanFlag_*/SF_TupScan },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_DiskScan",
      NdbScanOperation::/*_enum ScanFlag_*/SF_DiskScan },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_OrderBy",
      NdbScanOperation::/*_enum ScanFlag_*/SF_OrderBy },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_Descending",
      NdbScanOperation::/*_enum ScanFlag_*/SF_Descending },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_ReadRangeNo",
      NdbScanOperation::/*_enum ScanFlag_*/SF_ReadRangeNo },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_MultiRange",
      NdbScanOperation::/*_enum ScanFlag_*/SF_MultiRange },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanFlag.SF_KeyInfo",
      NdbScanOperation::/*_enum ScanFlag_*/SF_KeyInfo },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_SCANFLAGS",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_SCANFLAGS },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_PARALLEL",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_PARALLEL },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_BATCH",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_BATCH },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_GETVALUE",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_GETVALUE },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_PARTITION_ID",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_PARTITION_ID },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_INTERPRETED",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_INTERPRETED },
    { "com.myblockchain.ndbjtie.ndbapi.NdbScanOperation$ScanOptionsConst$Type.SO_CUSTOMDATA",
      NdbScanOperation::ScanOptions::/*_enum Type_*/SO_CUSTOMDATA },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$CommitStatusType.NotStarted",
      NdbTransaction::/*_enum CommitStatusType_*/NotStarted },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$CommitStatusType.Started",
      NdbTransaction::/*_enum CommitStatusType_*/Started },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$CommitStatusType.Committed",
      NdbTransaction::/*_enum CommitStatusType_*/Committed },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$CommitStatusType.Aborted",
      NdbTransaction::/*_enum CommitStatusType_*/Aborted },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$CommitStatusType.NeedAbort",
      NdbTransaction::/*_enum CommitStatusType_*/NeedAbort },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$ExecType.NoExecTypeDef",
      NdbTransaction::/*_enum ExecType_*/NoExecTypeDef },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$ExecType.Prepare",
      NdbTransaction::/*_enum ExecType_*/Prepare },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$ExecType.NoCommit",
      NdbTransaction::/*_enum ExecType_*/NoCommit },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$ExecType.Commit",
      NdbTransaction::/*_enum ExecType_*/Commit },
    { "com.myblockchain.ndbjtie.ndbapi.NdbTransaction$ExecType.Rollback",
      NdbTransaction::/*_enum ExecType_*/Rollback },
    { "", UNKNOWN_CONSTANT } // last entry
};

int64_t nativeConstValue(const char * p0) {
    assert(p0);
    const int n = sizeof(constants) / sizeof(constants[0]);
    for (int i = 0; i < n; i++) {
        if (!strcmp(constants[i].name, p0))
            return constants[i].value;
    }
    return UNKNOWN_CONSTANT;
}
